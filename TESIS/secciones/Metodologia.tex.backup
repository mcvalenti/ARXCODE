\chapter{Metodología de Desarrollo}
\label{chap:metodologia}
%\endinput
 %De acuerdo a \cite{Barrett2009}, el modelo WCM...\\
Para el desarrollo de este trabajo se opt\'o por un modelo de desarrollo de tipo incremental (que resulta iterativo por naturaleza).
En cada iteraci\'on, se optimiz\'o el dise\~no y se fueron agregando nuevas funcionalidades y capacidades al sistema.\\

El problema que nos propusimos resolver, requer\'ia de la implementaci\'on de distintos algoritmos en una estructura acoplada, es decir que los resultados de un m\'odulo se utilizan en el siguiente. Esto implica que para un an\'alisis completo cada una de las instancias deb\'ian estar previamente validadas.\\
No obstante, las salidas de los m\'odulo que eran ingesta de otros m\'odulos pod\'ian reemplazarse por datos ya conocidos, y as\'i desarrollar y validar el m\'odulo siguiente, mientras se analizaba en paralelo c\'omo mejorar o corregir los resultados no satisfactorios. De esta manera se fue armando la estructura general del software a gran escala, y luego revisando y afinando cada uno de los paquetes.\\

Esta forma de trabajo nos permiti\'o separar la complejidad del proyecto, y a su vez, desarrollar una estructura de biblioteca f\'acilmente modificables, sin alterar la estructura central.\\

\section{Inicializaci\'on}
En esta primera etapa evaluamos  el concepto del ARxCODE en el contexto de la Unidad de Desarrollo de Desechos Espaciales de CONAE. Fundamentalmente la vinculaci\'on con el departamento de Din\'amica Orbital y los procedimientos actuales que se realizan en relaci\'on a los riesgos de colisi\'on con desechos.\\

Hicimos un estudio de las estructuras org\'anicas existentes y los sistemas asociados. Los distintos tipos de productos y usuarios, las interfaces que existen y el acceso a los datos reales con los que podr\'iamos contar.\\

Analizamos c\'omo trabajan otras agencias espaciales la tem\'atica y concluimos qu\'e es lo que podr\'ia ofrecerse y bajo qu\'e premisas.\\
De las consideraciones m\'as importantes que se desprendieron de esta etapa, cabe destacar que se decidi\'o un prototipo para funcionar montado sobre el software principal de Din\'amica Orbital, como un anexo que no interfiere de ninguna manera con los procesos actuales.\\
Por otro lado, debido a la complejidad del problema y sus consecuencias, ser\'a un software diseñado para ser utilizado por un analista experto, con conocimientos de Din\'amica Orbital.\\
En el mismo sentido, sus productos finales no ser\'an considerados en la toma de decisiones hasta tanto sus resultados no hayan sido validados durante un periodo suficiente, que permita verificar y mejorar su funcionamiento, valid\'andolo con un acumulado de situaciones reales.\\

Para este planteo de definiciones, contamos con el asesoramiento y el intercambio de informaci\'on con personas de Din\'amica Orbital y otros departamentos de CONAE. Realizamos algunas reuniones e intercambio de mails, aunque por ser una tem\'atica que se aborda bajo reg\'imenes especiales de acuerdos de confidencialidad, no fue posible contar con la totalidad de la informaci\'on.

\section{Iteraci\'on}
Ya conocido el planteo del problema, las distintas maneras de abordarlo y las restricciones que resultan, elaboramos un diseño preliminar del producto con sus requerimientos (Sec. \ref{sec:requerimientos}) y sus funcionalidades, que dadas las caracter\'isticas del problema resultan bastante deterministas.\\

Para el desarrollo definimos distintos paquetes o componentes (Sec. \ref{subsec:componentes}):\\

\begin{itemize}
\itemsep0em
 \item Paquetes de Procesamiento: {\it{AjustarTle}}, {\it{Comparar}}, {\it{Encuentro}}, {\it{Estad\'istica}}.
 \item Paquetes de Administraci\'on de Datos: {\it{TleAdmin}}, {\it{CodsAdmin}}, {\it{CDM}}.
 \item Paquetes Generales de utilizaci\'on m\'ultiple: {\it{SistReferencia}}, {\it{Validaci\'on}}.
 \item Paquetes de visualizaci\'on e interfaz gr\'afica: {\it{Aplicaci\'on}}, {\it{visual}}.
\end{itemize}

Esta metodolog\'ia nos permiti\'o importar funciones que resuelven cuestiones espec\'ificas desde cualquier  m\'odulo y a su vez modificar las funciones cuando fuera necesario.\\
Cuando empezamos con el diseño y el desarrollo de la interfaz, fuimos modificando mucho las opciones, en tanto utilizamos la interfaz para seguimiento de pasos intermedios que a medida que iban siendo validados se iban retirando de las opciones del usuario.\\

\section{Control}
Al tratarse de un sistema que implementa distintas metodolog\'ias para el c\'alculo de par\'ametros, el control se bas\'o en analizar que los resultados de los algoritmos implementados fueran coherentes y coincidieran con los que exist\'ian en publicaciones que pudi\'eramos reproducir.\\
Fue fundamental implementar un control sobre la implementaci\'on de la solicitud y propagaci\'on de los datos TLE y sobre los algoritmos de transformaci\'on de coordenadas.\\
Para cada una de las instancias de validaci\'on se configuraron distintos escenarios de prueba y en muchas oportunidades se verificaron los resultados parciales, con pruebas realizadas con otros programas como Excel.\\

\section{Entorno de Desarrollo}

Para el desarrollo utilizamos:\\
\begin{itemize}
 \item Plataforma de Desarrollo (\ac{IDE}): Eclipse Ver. 3.8.1.
 \item Leguaje de Programaci\'on: Python 2.7
 \item Biblioteca de Interfaz gr\'afica: QT por medio del enlace PyQT.
 \item Gestor de Configuraci\'on: Git.
 \item Generador de Documentaci\'on: Doxygen.
 \item Bibliotecas utilizadas: SGP4 \citep{sgp4python}
\end{itemize}

\subsection*{Eclipse}
Eclipse (Ver. 3.8.1) es una plataforma de desarrollo, multiplataforma cuya estructura de perspectivas, editores y vistas, facilita el desarrollo en distintos lenguajes de programaci\'on. En nuestro caso incorporamos el IDE para python, {\it{Pydev}}.\\
Eclipse ofrece excelentes capacidades para la gesti\'on del proyecto, permitiendo incorporar en un mismo proyecto distintos archivos y documentaci\'on, que en nuestro caso agrup\'o no s\'olo los distintos datos de entrada y salida, como TLE, CDM, productos orbitales, etc, sino que tambi\'en incluy\'o todos los poloteos y gr\'aficos que resultaban de los procesamientos y la propia documentaci\'on referida a la escritura de esta tesis. Esto fue muy productivo en lo que respecta al control de versiones, ya que se aprovech\'o el hecho de que Eclispe ya tiene icorporado el Git.\\
Cabe destacar también, que ofrece una excelente herramientas de depuraci\'on.\\

\subsection*{Python}
El lenguaje de programaci\'on Python se destaca en sus capacidades tanto de c\'alculo como de manejo de texto. Esto agiliza mucho los procesos que involucran el manejo de tablas de datos plasmadas en texto plano, como son por ejemplo los datos TLE y las efem\'erides orbitales que se generan como productos del departamento de Din\'amica Orbital. As\'i mismo facilita el manejo de las nomenclaturas de los distintos archivos de datos o im\'agenes generadas. (Referencia correlacional ¡?)\\
Existen numerosas, potentes y optimizadas bibliotecas para la realizaci\'on de c\'alculos, y el tratamiento vectorial. En nuestro caso explotamos particularmente la biblioteca {\it{numpy}}, y muy poco de {\it{scipy}} para interpolar datos espec\'ificamente.\\
Finalmente su utilizaci\'on masiva permite tener acceso r\'apido a sus potencialidades.\\

\subsection*{QT}
Para el desarrollo de la interfaz gr\'afica se utiliz\'o QT, a trav\'es del enlace PyQT.\\
Esta herramienta facilita el desarrollo de aplicaciones multiplataforma. Su mecanismo de conexión de señales y eventos es simple, esto permite definir los eventos sencillos en la estructura del GUI, y luego invocar el c\'odigo python con las acciones m\'as avanzadas.\\
Subyace su implementaci\'on en C++ que muchas veces dificulta la comprensi\'on para los que estamos familiarizados con la l\'ogica del python, y lo mismo ocurre con la documentaci\'on y prevalecen los ejemplos para C++.\\

\subsection*{Git}
Si bien, esta herramienta est\'a por debajo subexplotada en este trabajo, ya que se trata de un proyecto sencillo y desarrollada por dos personas, fue fundamental para agilizar la posibilidad de trabajar desde cualquier computadora siempre en la \'ultima versi\'on del desarrollo.\\









